Find Bottom Left Tree Value

Given the root of a binary tree, return the leftmost value in the last row of the tree.

 

Example 1:


Input: root = [2,1,3]
Output: 1

class Solution {
    public int findBottomLeftValue(TreeNode root) {
        Queue<TreeNode>queue=new LinkedList<>();
        List<Integer>list=new ArrayList<>();
        if(root==null){
            return 0;
        }
        queue.add(root);
        while(!queue.isEmpty()){
            int size=queue.size();
            for(int i=1;i<=size;i++){
                TreeNode curr=queue.poll();
                list.add(0,curr.val);
                if(curr.right!=null){
                    queue.add(curr.right);
                }
                if(curr.left!=null){
                    queue.add(curr.left);
                }
            }
        }
        
       
     int d=list.size();
       
    return list.get(0);

       
    }
}
