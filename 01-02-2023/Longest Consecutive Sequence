Longest Consecutive Sequence

Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.


class Solution {
    public int longestConsecutive(int[] nums) {
        int length=0;
        HashSet<Integer>l=new HashSet<>();
        for(int i=0;i<nums.length;i++){
            l.add(nums[i]);
        }
       
        for(int i=0;i<nums.length;i++){
            int max=1;
            while(!l.contains(nums[i]-1)){
                nums[i]++;
            while(l.contains(nums[i])){
               nums[i]++;
               max++;

            }
            
            if(max>length){
                length=max;
            }
            }
        }


        return length;
    }
}

or

class Solution {
    public int longestConsecutive(int[] nums) {
        int length=0;
        HashSet<Integer>l=new HashSet<>();
        for(int i=0;i<nums.length;i++){
            l.add(nums[i]);
        }
       
        for(int i=0;i<nums.length;i++){
             int max=1; 
        int preval=nums[i]-1; 
        int nextval=nums[i]+1;
            while(l.contains(preval)){
                max++;
                l.remove(preval);
                preval--;
                
            }
            while(l.contains(nextval)){
                max++;
                l.remove(nextval);
                nextval++;
            }
            length = Math.max(length,max);
        }
        return length;
    }
}
