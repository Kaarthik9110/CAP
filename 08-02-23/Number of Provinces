547. Number of Provinces

There are n cities. Some of them are connected, while some are not. If city a is connected directly with city b, and city b is connected directly with city c, then city a is connected indirectly with city c.

A province is a group of directly or indirectly connected cities and no other cities outside of the group.

You are given an n x n matrix isConnected where isConnected[i][j] = 1 if the ith city and the jth city are directly connected, and isConnected[i][j] = 0 otherwise.

Return the total number of provinces.
Example 1:
Input: isConnected = [[1,1,0],[1,1,0],[0,0,1]]
Output: 2


class Solution {
    boolean visited[];
    int c=0;
    
    List<List<Integer>>list=new ArrayList<>();
    public int findCircleNum(int[][] isConnected) {
        visited=new boolean[isConnected.length];
        int m=isConnected[0].length;
        
         for(int i=0;i<isConnected.length;i++){
             ArrayList<Integer>list1=new ArrayList<>();
            for(int j=0;j<m;j++){
                if(i!=j && isConnected[i][j]==1){
                    list1.add(j);
                }
            }
              list.add(list1);
        }
      
        for(int i=0;i<isConnected.length;i++){
            if(!visited[i]){
                c++;
                dfs(i);
            }
    }
    return c;
    }
        public void dfs(int s){
            visited[s]=true;
            for(int i:list.get(s)){
                if(!visited[i]){
                    dfs(i);
                }
            }
        }
    }
