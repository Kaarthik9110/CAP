MINIMUM DEPTH OF A BINARY TREE

Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

class Solution {
    public int minDepth(TreeNode root) {
        if(root==null){
            return 0;
        }
       
        else{
            
            int left=minDepth(root.left);
            int right=minDepth(root.right);
            if(root.left==null && root.right!=null){
                return right + 1;
        }
            if(root.right==null && root.left!=null){
                return left + 1;
            }
            return 1+Math.min(left,right);
        }
    }
}


or


class Solution {
    public int minDepth(TreeNode root) {
        if(root==null){
            return 0;
        }
        else if(root.left==null && root.right!=null){
            int right=minDepth(root.right);
            int left=minDepth(root.left);
            return right + 1;
        }
        else if(root.right==null && root.left!=null){
             int left=minDepth(root.left);
             int right=minDepth(root.right);
            return left + 1;
        }
        else{
            
            int left=minDepth(root.left);
            int right=minDepth(root.right);
            return 1+Math.min(left,right);
            }

}
}
