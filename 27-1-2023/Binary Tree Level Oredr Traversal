Binary Tree Level Oredr Traversal
Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]


class Solution 
{
    public List<List<Integer>> levelOrder(TreeNode root) 
    {
        List<List<Integer>>list=new ArrayList<>();
        if(root==null)
        {
            return list;
        }
        Queue <TreeNode> queue=new LinkedList<>();
        queue.add(root); 
        while(!queue.isEmpty())
            {
            List<Integer>list1=new ArrayList<>();
            int size=queue.size();
                for(int i=1;i<=size;i++)
                {
                    TreeNode pres=queue.remove();
                    list1.add(pres.val);
                if(pres.left!=null)
                    {
                    queue.add(pres.left);
                    }
                if(pres.right!=null)
                    {
                    queue.add(pres.right);
                    }
                }
                list.add(list1);

            }
            return list;
    }
}
