Binary Tree Zigzag Level Order Traversal
Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode>queue=new LinkedList<>();
        List<List<Integer>>list=new ArrayList<>();
          if(root==null){
              return list;
          }
          else{
              queue.add(root);
              int level=0;
              boolean le=true;
              while(!queue.isEmpty()){
                  List<Integer>list1=new ArrayList<>();
                  int size=queue.size();
                  for(int i=1;i<=size;i++){
                      TreeNode curr=queue.poll();
                           if(le){
                               list1.add(curr.val);
                           }
                           if(!le){
                               list1.add(0,curr.val);
                           }
                           if(curr.left!=null){
                                queue.add(curr.left);
                            }
                           if(curr.right!=null){
                                queue.add(curr.right);
                            }      
                  }
                 le=!le;
                  list.add(list1);
              }
          }
          return list;
    }
}
