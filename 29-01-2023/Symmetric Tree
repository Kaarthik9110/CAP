 Symmetric Tree
Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

 

Example 1:


Input: root = [1,2,2,3,4,4,3]
Output: true

class Solution {
    public boolean sym(TreeNode root1,TreeNode root2){
        if(root1==null && root2==null){
            return true;
        }
        if(root1==null || root2==null){
            return false;
        }
        if(root1.val!=root2.val){
            return false;
        }
        return sym(root1.left,root2.right) && sym(root1.right,root2.left);
    }
    public boolean isSymmetric(TreeNode root) {
       if(root==null){
           return false;
       }
       else{
           return sym(root.left,root.right);
       }
    }
}
